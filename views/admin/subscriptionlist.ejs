<!-- Include necessary CSS file for DataTables -->
<!-- <link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/1.10.25/css/jquery.dataTables.css">
  <link rel="stylesheet" href="<%=nodeSiteUrl%>/css/bootstrap.min.css" />
  <link rel="stylesheet" href="<%=nodeSiteUrl %>/css/bootstrap.min.css" /> -->

<%- include ('./elements/header.ejs') %>

  <div class="main-content">
    <div class="container-fluid">
      <div class="row">
        <div class="col-md-12 buttonsadduser">
          <!-- <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#importModal">
            Import Bulk Users
          </button> -->
          <!-- <button id="addUserButton" class="btn btn-primary">Add Subscription</button> -->
        </div>
      </div>
    </div>

    <!-- Bootstrap Modal for Importing CSV -->
    <div class="modal" id="importModal" tabindex="-1" role="dialog" aria-labelledby="importModalLabel"
      aria-hidden="true">
      <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
          <div class="modal-header">
            <h3 class="modal-title" id="importModalLabel">Import CSV File</h3>
            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
              <span aria-hidden="true">&times;</span>
            </button>
          </div>

          <div class="modal-body importModelLink">
            <form id="uploadForm" enctype="multipart/form-data">
              <div class="form-group drop-area" style="text-align: center">
                <label for="fileInput" class="btn-3">
                  <span class="select-button">Choose a File</span>
                </label>
                <input class="form-control" type="file" name="file" class="form-control-file" id="fileInput" required
                  accept=".csv, application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel" />
                <span id="fileNameDisplay">No file chosen, yet.</span>
              </div>
            </form>
            <div class="demoCsv">
              <a href="<%=process.env.nodeAdminUrl%>/download/demo/csv" download="data.csv">Click here to download demo
                CSV file</a>
            </div>
          </div>
          <div class="modal-footer">
            <button type="button" class="btn btn-secondary" data-dismiss="modal">
              Close
            </button>
            <button type="button" class="btn btn-primary" id="importBtn">
              Import
            </button>
          </div>
        </div>
      </div>
    </div>

    <div id="flashMessage" class="alert alert-success" style="display: none"></div>

    <div id="addUserPopup" class="modal" tabindex="-1">
      <div class="modal-dialog">
        <div class="modal-content">
          <div class="modal-header">
            <h2 class="modal-title">Add plan</h2>
            <button type="button" class="btn-close btnclose" data-bs-dismiss="modal" aria-label="Close">
              X
            </button>
          </div>
          <div class="modal-body">
            <form id="addPlan">
              <div class="mb-3">
                <label for="type" class="form-label">Type</label>
                <select id="type" name="type" class="form-select form-control">
                  <option value="friend">Friend</option>
                  <option value="individual">Individual</option>
                  <option value="family">Family</option>
                  <option value="neighbourhoods">neighbourhoods</option>
                </select>
              </div>

              <div class="mb-3">
                <label for="price" class="form-label">Price</label>
                <input type="number" name="price" id="price" class="form-control" placeholder="Plan price" />
              </div>

              <div class="modal-footer">
                <button type="submit" id="saveUserButton" class="btn btn-primary">Submit</button>
              </div>
            </form>


          </div>
        </div>
      </div>
    </div>
    <table id="userTable">
      <thead>
        <tr>
          <th>Sno</th>
          <th>Type</th>
          <th>Price</th>
          <th>Created at</th>
          <th>Registration Date</th>
        </tr>
      </thead>

      <tbody id="userTable"></tbody>
    </table>
  </div>

  <%- include ('./elements/footer.ejs') %>
    <!-- Include necessary JavaScript files for DataTables and jQuery -->
    <!-- jQuery library -->
    <script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>

    <!-- jQuery Validation Plugin -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.20.0/jquery.validate.min.js"></script>


    <!-- Other scripts -->
    <script src="https://cdn.datatables.net/1.10.25/js/jquery.dataTables.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.1/moment.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.x.x/dist/js/bootstrap.bundle.min.js"></script>

    <script>

      document
        .getElementById('saveUserButton')
      $(document).ready(function () {

        // Add User Functionality in add user button
        $('#addUserButton').click(function () {
          $('#addUserPopup').modal('show');
        });

        // Make the deleteUser function available globally


      });

      $(document).ready(function () {
        var srcData = JSON.parse(`<%- srcData %>`); // Parse the JSON string to an array of objects

        $('#userTable').DataTable({
          pageLength: 10,
          data: srcData,
          dom: 'Bfrtip', // Add the Buttons to the toolbar
          buttons: [
            'copy',
            'csv',
            'excel',
            'pdf',
            'print', // Built-in Buttons
            {
              text: 'Import', // Custom Import Button
              action: function (e, dt, node, config) {
                // Handle your import logic here
                alert('Import button clicked!');
              },
            },
          ],
          columns: [
            {
              data: null, // Use null data source for this column
              render: function (data, type, row, meta) {
                // Render the serial number using the row index
                return meta.row + 1;
              },
            },
            // { data: 'id' },
            { data: 'type' },

            { data: 'price' },
            // {
            //   data: 'isApprovedByAdmin',
            //   render: function (data, type, row) {
            //     return data == 1 ? 'Approved' : 'Not Approved'; // Render "Yes" if 1, "No" if 0
            //   },
            // },

            {
              data: 'createdAt',
              render: function (data, type, row) {
                return moment(data).format('YYYY-MM-DD HH:mm:ss A');
              },
            },
            {
              data: null,
              render: function (data, type, row) {
                return `
               
                    <a href="<%=process.env.nodeAdminUrl%>/viewPlan/${data.id}" class="btn btn-secondary btn-sm" onclick="views(${data.id})"   title="View User" >
                           <i class="fas fa-eye"></i> <!-- Updated Font Awesome class and icon -->
                      </a>
                      </button>
                  `;
              },
            },
          ],
        });
      });

      // <a href="<%=process.env.nodeAdminUrl%>/getEditSubscriptionPlan/${data.id}" class="btn btn-primary btn-sm" onclick="editUser(${data.id})">
      //                 <i class="fas fa-edit"  title="Edit User"></i>
      //               </a>
      //               <a class="btn btn-danger btn-sm" onclick="deletePlan('${data.id}')">
      //             <i class="fas fa-trash"  title="Delete User" ></i>
      //           </a>

      // Upload Editor - triggered from the import button. Used only for uploading a file to the browser

      // Handle dropdown change event to update data in the database
      $(document).on('change', '.status-dropdown', function () {
        const selectedOption = $(this).val();
        const dataId = $(this).data('id');

        console.log({ selectedOption }, { dataId });

        // Use AJAX to update the data in the database
        $.ajax({
          url: 'update/user/status',
          method: 'POST', // Use POST or PUT, depending on your server-side update method
          data: { id: dataId, status: selectedOption },
          success: function (response) {
            // Handle the response if needed
            console.log('Update successful');
          },
          error: function (error) {
            console.error('Error updating data:', error);
          },
        });
      });




    </script>

    <script>
      $(document).ready(function () {
        $("#addPlan").validate({
          rules: {
            type: {
              required: true,
            },
            price: {
              required: true,
              number: true,
              min: 0,
            },
          },
          messages: {
            type: {
              required: "Type is required.",
            },
            price: {
              required: "Price is required.",
              number: "Please enter a valid number.",
              min: "Please enter a value greater than or equal to 0.",
            },
          },
          errorElement: "div",
          errorPlacement: function (error, element) {
            // Customize the placement of error messages
            error.addClass("alert alert-danger");
            error.insertAfter(element);
          },
          submitHandler: function (form) {
            var typeValue = $("#type").val();
            var priceValue = $("#price").val();


            console.log("Type:", typeValue);
            console.log("Price:", priceValue);

            let data = {
              price: priceValue,
              type: typeValue
            }

            $.ajax({
              type: 'POST',
              url: `<%=process.env.nodeAdminUrl%>/addSubscriptionPlan`,
              data: data,
              dataType: 'json',
              success: function (data) {
                Swal.fire(
                  'Good job!',
                  'User created successfully!',
                  'success'
                )
                $('#addUserPopup').modal('hide');
                setTimeout(function () {
                  window.location.href = '<%=process.env.nodeAdminUrl%>/getSubscriptionPlans';
                }, 2000);
              },
              error: function (xhr, status, error) {
                console.error('AJAX Error:', error);
                // Handle error if needed
              }
            });
          },
        });
      });

      function deletePlan(planId) {
        // Show a confirmation dialog to the userswa
        //const confirmed = Swal('Do you want to delete this user?');

        Swal.fire({
          title: 'Are you sure?',
          text: "You won't be able to revert this!",
          icon: 'warning',
          showCancelButton: true,
          confirmButtonColor: '#3085d6',
          cancelButtonColor: '#d33',
          confirmButtonText: 'Yes, delete it!'
        }).then((result) => {
          if (result.isConfirmed) {

            // User confirmed, proceed with the deletion
            $.ajax({
              type: 'DELETE',
              url: `<%=process.env.nodeAdminUrl%>/deletePlan/${planId}`,
              // Correct the URL to include the actual userId
              success: function (data) {
                Swal.fire(
                  data.message,
                  'You clicked the button!',
                  'success'
                )
                if (data.message === 'Plan deleted successfully') {
                  setTimeout(function () {
                    window.location.href = '<%=process.env.nodeAdminUrl%>/userlist';
                  }, 2000);
                }
              },
              error: function (error) {
                console.error('An error occurred during user deletion:', error);
                // Handle error (e.g., show an error message to the user)
              }
            });
          }
        });
      }

    </script>